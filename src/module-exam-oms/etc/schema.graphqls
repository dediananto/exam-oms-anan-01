type Query {
    getProductAnan(
        search: String @doc(description: "Performs a full-text search using the specified key words.")
        filter: ProductFilterInput @doc(description: "Identifies which product attributes to search for and return.")
        sort: ProductSortInput @doc(description: "Specifies which attributes to sort on, and whether to return the results in ascending or descending order.")
        pageSize: Int = 5 @doc(description: "Specifies the maximum number of results to return at once. This attribute is optional.")
        currentPage: Int = 1 @doc(description: "Specifies which page of results to return. The default value is 1.")
    ): ProductList
    @resolver(class: "\\Icube\\ExamOms\\Model\\Resolver\\GetProductList") @doc(description: "The getProductList query returns the information about a shipment")
}

input ProductFilterInput {
    entity_id: FilterRangeTypeInput @doc(description: "entity id product")
    name: FilterTypeInput @doc(description: "product name")
    sku: FilterTypeInput @doc(description: "sku product")
    status: FilterTypeInput @doc(description: "product status")
}

input ProductSortInput {
    entity_id: SortEnum @doc(description: "entity id product")
    name: SortEnum @doc(description: "product name")
    sku: SortEnum @doc(description: "sku product")
}

type ProductList {
    items: [ProductOutput] @doc(description: "The array of the Product")
    page_info: SearchResultPageInfo @doc(description: "An object that includes the page_info and currentPage values specified in the query.")
    total_count: Int @doc(description: "The number of products returned.")
}

type ProductOutput {
    entity_id: Int @doc(description: "entity id product")
    name: String @doc(description: "product name")
    sku: String @doc(description: "sku product")
    price: Int @doc(description: "product price")
    status: StatusOutput @doc(description: "product status")
    description: String @doc(description: "product description")
    sort_description: String @doc(description: "product sort description")
    weight: Int @doc(description: "product weigth")
    dimension_package_height: Int @doc(description: "product dimension package heigth")
    dimension_package_length: Int @doc(description: "product dimension package length")
    dimension_package_width: Int @doc(description: "product dimension package width")
}

type StatusOutput {
    value: Int
    label: String
}